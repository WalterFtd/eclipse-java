package cn.walter.demo04;
/*
 * 以后就是，面向接口编程，别人提供一个接口，你去实现
接口的出现扩展了功能
接口就是暴露出来的规则，满足我，才能接上
接口的出现降低了耦合性，把接口去掉，不要紧，设备之间的解耦

抽象类是共性，应该具备的内容   接口是额外功能
优先用接口，少用抽象类
相同点：
都位于继承的顶端，用于被其他类实现或继承
都不能直接实例化对象
都包含抽象方法，其子类都必须覆盖这些抽象方法

区别：
抽象类为部分方法提供实现，避免子类重复实现这些方法，提高代码重用性；接口只能包含抽象方法
一个类只能继承一个直接父类（可能是抽象类），可以实现多个接口（接口弥补了Java的单继承）

 */
public class Information {
//主要是写一下接口和抽象类的共性和区别
}
